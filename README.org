#+TODO: READ INPROGRESS | DONE
#+TODO: TODO INPROGRESS | DONE HALT
#+TODO: | NOTE

* Main tasks
** TODO Prob & Stats
   - Complete the book
** TODO HMM
   - Complete the book and try out multiple articles
** TODO ML0
   - Complete the book


* Notes
** NOTE Prob and Network Programming
   DEADLINE: <2017-02-06 Mon> SCHEDULED: <2017-02-06 Mon>
   What is the difference between "Monty Hall Problem" vs
   "Gambler's Fallacy". I usually err to avoid the "Gambler's
   fallacy".
   I have been reading up on Python Asyncio. Though I have not got
   a complete feel of it - though the network application makes
   complete sense. Need to fathom when to apply it as a design
   pattern. 

** Read up on
*** READ [#A] [[https://www.safaribooksonline.com/library/view/probability-and-statistics/9781439875919/cover.xhtml][O-reily-videos]]
    SCHEDULED: <2017-02-06 Mon>
*** READ Softmax regression
    SCHEDULED: <2017-02-06 Mon>
*** READ GradientDescentOptimizer
    SCHEDULED: <2017-02-06 Mon>
    It was mentioned int he Andrew Ng Course ware. Read up on it. 
*** READ [[https://www.safaribooksonline.com/library/view/bayesian-probability-theory/9781139949293/Cover.html][Bayesian_Prob_Theory]]
    SCHEDULED: <2017-02-06 Mon>
*** READ [[https://lagunita.stanford.edu/courses/HumanitiesSciences/StatLearning/Winter2016/info][ML0_Course]]
    SCHEDULED: <2017-02-06 Mon>
*** READ Python Asyncio
    SCHEDULED: <2017-02-06 Mon>
    + [[http://krondo.com/an-introduction-to-asynchronous-programming-and-twisted/][Twisted_Intro]]
    + https://docs.python.org/3/library/asyncio.html
      - Read up on the PEPs
*** READ Network Programming
    SCHEDULED: <2017-02-06 Mon>
    + http://beej.us/guide/bgnet/output/html/multipage/index.html
*** READ Random Variable
    SCHEDULED: <2017-02-06 Mon>
    + https://www.khanacademy.org/math/statistics-probability/random-variables-stats-library
*** INPROGRESS IRT : Item Response Theory
    SCHEDULED: <2017-02-13 Mon>
    + R package for IRT
      https://stat.ethz.ch/pipermail/r-packages/2009/001003.html
    [[./Learn/IRT/README.org][IRT_README.org]]
*** READ How does IPython work - Design
    [[https://jupyter.readthedocs.io/en/latest/architecture/how_jupyter_ipython_work.html][READ]]
*** READ all the IPython books
    Also has data-science books to
    [[https://github.com/jupyter/jupyter/wiki/A-gallery-of-interesting-Jupyter-and-IPython-Notebooks][READ]]
*** READ Microsoft Air Sim
    [[https://www.microsoft.com/en-us/research/project/aerial-informatics-robotics-platform/][READ]]
*** READ Intel AI
    [[https://software.intel.com/ai/academy?cid=&utm_content=Machine_Learning_Enthusiasts&utm_medium=Banner_Ad&utm_source=MIT_Tech_Review&utm_campaign=AI_Q1_17_Digital_Media_Campaign&goal=0_997ed6f472-2c0f81167e-153747725&mc_cid=2c0f81167e&mc_eid=ebd9c332d0][READ]]
*** READ [#A] AI Juggles probability
    SCHEDULED: <2017-02-16 Thu>
    [[https://www.technologyreview.com/s/603542/ai-software-juggles-probabilities-to-learn-from-less-data/?utm_campaign=newsletters&utm_source=newsletter-weekly-robotics&utm_medium=email&utm_content=20170215&goal=0_997ed6f472-2c0f81167e-153747725&mc_cid=2c0f81167e&mc_eid=ebd9c332d0][MIT_RESOURCE]]
    - It shows use of Bayesian probability in comparison to neural networks.
